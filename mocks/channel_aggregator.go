// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/channel_aggregator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockChannelAggregator is a mock of ChannelAggregator interface
type MockChannelAggregator struct {
	ctrl     *gomock.Controller
	recorder *MockChannelAggregatorMockRecorder
}

// MockChannelAggregatorMockRecorder is the mock recorder for MockChannelAggregator
type MockChannelAggregatorMockRecorder struct {
	mock *MockChannelAggregator
}

// NewMockChannelAggregator creates a new mock instance
func NewMockChannelAggregator(ctrl *gomock.Controller) *MockChannelAggregator {
	mock := &MockChannelAggregator{ctrl: ctrl}
	mock.recorder = &MockChannelAggregatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChannelAggregator) EXPECT() *MockChannelAggregatorMockRecorder {
	return m.recorder
}

// AggregateChannel mocks base method
func (m *MockChannelAggregator) AggregateChannel(channelEntity *entities.ChannelEntity) *models.Channel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregateChannel", channelEntity)
	ret0, _ := ret[0].(*models.Channel)
	return ret0
}

// AggregateChannel indicates an expected call of AggregateChannel
func (mr *MockChannelAggregatorMockRecorder) AggregateChannel(channelEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregateChannel", reflect.TypeOf((*MockChannelAggregator)(nil).AggregateChannel), channelEntity)
}

// AggregateChannels mocks base method
func (m *MockChannelAggregator) AggregateChannels(channelEntities []*entities.ChannelEntity) []*models.Channel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregateChannels", channelEntities)
	ret0, _ := ret[0].([]*models.Channel)
	return ret0
}

// AggregateChannels indicates an expected call of AggregateChannels
func (mr *MockChannelAggregatorMockRecorder) AggregateChannels(channelEntities interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregateChannels", reflect.TypeOf((*MockChannelAggregator)(nil).AggregateChannels), channelEntities)
}

// AggregatePaginationResult mocks base method
func (m *MockChannelAggregator) AggregatePaginationResult(entityPaginationResult *models.PaginationResult) *models.PaginationResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregatePaginationResult", entityPaginationResult)
	ret0, _ := ret[0].(*models.PaginationResult)
	return ret0
}

// AggregatePaginationResult indicates an expected call of AggregatePaginationResult
func (mr *MockChannelAggregatorMockRecorder) AggregatePaginationResult(entityPaginationResult interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregatePaginationResult", reflect.TypeOf((*MockChannelAggregator)(nil).AggregatePaginationResult), entityPaginationResult)
}
