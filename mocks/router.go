// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/router.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRouter is a mock of Router interface
type MockRouter struct {
	ctrl     *gomock.Controller
	recorder *MockRouterMockRecorder
}

// MockRouterMockRecorder is the mock recorder for MockRouter
type MockRouterMockRecorder struct {
	mock *MockRouter
}

// NewMockRouter creates a new mock instance
func NewMockRouter(ctrl *gomock.Controller) *MockRouter {
	mock := &MockRouter{ctrl: ctrl}
	mock.recorder = &MockRouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRouter) EXPECT() *MockRouterMockRecorder {
	return m.recorder
}

// AddRoute mocks base method
func (m *MockRouter) AddRoute(httpMethod, routePath string, httpHandlerFunc contracts.HttpHandlerFunc) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddRoute", httpMethod, routePath, httpHandlerFunc)
}

// AddRoute indicates an expected call of AddRoute
func (mr *MockRouterMockRecorder) AddRoute(httpMethod, routePath, httpHandlerFunc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRoute", reflect.TypeOf((*MockRouter)(nil).AddRoute), httpMethod, routePath, httpHandlerFunc)
}
