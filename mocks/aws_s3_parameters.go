// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/aws_s3_parameters.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAwsS3Parameters is a mock of AwsS3Parameters interface
type MockAwsS3Parameters struct {
	ctrl     *gomock.Controller
	recorder *MockAwsS3ParametersMockRecorder
}

// MockAwsS3ParametersMockRecorder is the mock recorder for MockAwsS3Parameters
type MockAwsS3ParametersMockRecorder struct {
	mock *MockAwsS3Parameters
}

// NewMockAwsS3Parameters creates a new mock instance
func NewMockAwsS3Parameters(ctrl *gomock.Controller) *MockAwsS3Parameters {
	mock := &MockAwsS3Parameters{ctrl: ctrl}
	mock.recorder = &MockAwsS3ParametersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAwsS3Parameters) EXPECT() *MockAwsS3ParametersMockRecorder {
	return m.recorder
}

// AccessKeyId mocks base method
func (m *MockAwsS3Parameters) AccessKeyId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccessKeyId")
	ret0, _ := ret[0].(string)
	return ret0
}

// AccessKeyId indicates an expected call of AccessKeyId
func (mr *MockAwsS3ParametersMockRecorder) AccessKeyId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccessKeyId", reflect.TypeOf((*MockAwsS3Parameters)(nil).AccessKeyId))
}

// SecretKeyId mocks base method
func (m *MockAwsS3Parameters) SecretKeyId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SecretKeyId")
	ret0, _ := ret[0].(string)
	return ret0
}

// SecretKeyId indicates an expected call of SecretKeyId
func (mr *MockAwsS3ParametersMockRecorder) SecretKeyId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretKeyId", reflect.TypeOf((*MockAwsS3Parameters)(nil).SecretKeyId))
}

// Bucket mocks base method
func (m *MockAwsS3Parameters) Bucket() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bucket")
	ret0, _ := ret[0].(string)
	return ret0
}

// Bucket indicates an expected call of Bucket
func (mr *MockAwsS3ParametersMockRecorder) Bucket() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bucket", reflect.TypeOf((*MockAwsS3Parameters)(nil).Bucket))
}

// Region mocks base method
func (m *MockAwsS3Parameters) Region() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Region")
	ret0, _ := ret[0].(string)
	return ret0
}

// Region indicates an expected call of Region
func (mr *MockAwsS3ParametersMockRecorder) Region() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Region", reflect.TypeOf((*MockAwsS3Parameters)(nil).Region))
}
