// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_video_api.go

// Package mocks is a generated GoMock package.
package mocks

import (
	common "github.com/emelnychenko/go-press/common"
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostVideoApi is a mock of PostVideoApi interface
type MockPostVideoApi struct {
	ctrl     *gomock.Controller
	recorder *MockPostVideoApiMockRecorder
}

// MockPostVideoApiMockRecorder is the mock recorder for MockPostVideoApi
type MockPostVideoApiMockRecorder struct {
	mock *MockPostVideoApi
}

// NewMockPostVideoApi creates a new mock instance
func NewMockPostVideoApi(ctrl *gomock.Controller) *MockPostVideoApi {
	mock := &MockPostVideoApi{ctrl: ctrl}
	mock.recorder = &MockPostVideoApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostVideoApi) EXPECT() *MockPostVideoApiMockRecorder {
	return m.recorder
}

// ChangePostVideo mocks base method
func (m *MockPostVideoApi) ChangePostVideo(postId *models.PostId, postVideoId *models.FileId) common.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangePostVideo", postId, postVideoId)
	ret0, _ := ret[0].(common.Error)
	return ret0
}

// ChangePostVideo indicates an expected call of ChangePostVideo
func (mr *MockPostVideoApiMockRecorder) ChangePostVideo(postId, postVideoId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangePostVideo", reflect.TypeOf((*MockPostVideoApi)(nil).ChangePostVideo), postId, postVideoId)
}

// RemovePostVideo mocks base method
func (m *MockPostVideoApi) RemovePostVideo(postId *models.PostId) common.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemovePostVideo", postId)
	ret0, _ := ret[0].(common.Error)
	return ret0
}

// RemovePostVideo indicates an expected call of RemovePostVideo
func (mr *MockPostVideoApiMockRecorder) RemovePostVideo(postId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemovePostVideo", reflect.TypeOf((*MockPostVideoApi)(nil).RemovePostVideo), postId)
}
