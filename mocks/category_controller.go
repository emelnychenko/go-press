// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/category_controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	common "github.com/emelnychenko/go-press/common"
	contracts "github.com/emelnychenko/go-press/contracts"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCategoryController is a mock of CategoryController interface
type MockCategoryController struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryControllerMockRecorder
}

// MockCategoryControllerMockRecorder is the mock recorder for MockCategoryController
type MockCategoryControllerMockRecorder struct {
	mock *MockCategoryController
}

// NewMockCategoryController creates a new mock instance
func NewMockCategoryController(ctrl *gomock.Controller) *MockCategoryController {
	mock := &MockCategoryController{ctrl: ctrl}
	mock.recorder = &MockCategoryControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCategoryController) EXPECT() *MockCategoryControllerMockRecorder {
	return m.recorder
}

// ListCategories mocks base method
func (m *MockCategoryController) ListCategories(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCategories", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// ListCategories indicates an expected call of ListCategories
func (mr *MockCategoryControllerMockRecorder) ListCategories(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCategories", reflect.TypeOf((*MockCategoryController)(nil).ListCategories), httpContext)
}

// GetCategoriesTree mocks base method
func (m *MockCategoryController) GetCategoriesTree(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategoriesTree", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// GetCategoriesTree indicates an expected call of GetCategoriesTree
func (mr *MockCategoryControllerMockRecorder) GetCategoriesTree(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategoriesTree", reflect.TypeOf((*MockCategoryController)(nil).GetCategoriesTree), httpContext)
}

// GetCategory mocks base method
func (m *MockCategoryController) GetCategory(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategory", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// GetCategory indicates an expected call of GetCategory
func (mr *MockCategoryControllerMockRecorder) GetCategory(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategory", reflect.TypeOf((*MockCategoryController)(nil).GetCategory), httpContext)
}

// GetCategoryTree mocks base method
func (m *MockCategoryController) GetCategoryTree(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategoryTree", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// GetCategoryTree indicates an expected call of GetCategoryTree
func (mr *MockCategoryControllerMockRecorder) GetCategoryTree(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategoryTree", reflect.TypeOf((*MockCategoryController)(nil).GetCategoryTree), httpContext)
}

// CreateCategory mocks base method
func (m *MockCategoryController) CreateCategory(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCategory", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// CreateCategory indicates an expected call of CreateCategory
func (mr *MockCategoryControllerMockRecorder) CreateCategory(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCategory", reflect.TypeOf((*MockCategoryController)(nil).CreateCategory), httpContext)
}

// UpdateCategory mocks base method
func (m *MockCategoryController) UpdateCategory(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCategory", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// UpdateCategory indicates an expected call of UpdateCategory
func (mr *MockCategoryControllerMockRecorder) UpdateCategory(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCategory", reflect.TypeOf((*MockCategoryController)(nil).UpdateCategory), httpContext)
}

// ChangeCategoryParent mocks base method
func (m *MockCategoryController) ChangeCategoryParent(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeCategoryParent", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// ChangeCategoryParent indicates an expected call of ChangeCategoryParent
func (mr *MockCategoryControllerMockRecorder) ChangeCategoryParent(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeCategoryParent", reflect.TypeOf((*MockCategoryController)(nil).ChangeCategoryParent), httpContext)
}

// RemoveCategoryParent mocks base method
func (m *MockCategoryController) RemoveCategoryParent(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveCategoryParent", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// RemoveCategoryParent indicates an expected call of RemoveCategoryParent
func (mr *MockCategoryControllerMockRecorder) RemoveCategoryParent(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveCategoryParent", reflect.TypeOf((*MockCategoryController)(nil).RemoveCategoryParent), httpContext)
}

// DeleteCategory mocks base method
func (m *MockCategoryController) DeleteCategory(httpContext contracts.HttpContext) (interface{}, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCategory", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// DeleteCategory indicates an expected call of DeleteCategory
func (mr *MockCategoryControllerMockRecorder) DeleteCategory(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCategory", reflect.TypeOf((*MockCategoryController)(nil).DeleteCategory), httpContext)
}
