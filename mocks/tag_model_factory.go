// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/tag_model_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTagModelFactory is a mock of TagModelFactory interface
type MockTagModelFactory struct {
	ctrl     *gomock.Controller
	recorder *MockTagModelFactoryMockRecorder
}

// MockTagModelFactoryMockRecorder is the mock recorder for MockTagModelFactory
type MockTagModelFactoryMockRecorder struct {
	mock *MockTagModelFactory
}

// NewMockTagModelFactory creates a new mock instance
func NewMockTagModelFactory(ctrl *gomock.Controller) *MockTagModelFactory {
	mock := &MockTagModelFactory{ctrl: ctrl}
	mock.recorder = &MockTagModelFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTagModelFactory) EXPECT() *MockTagModelFactoryMockRecorder {
	return m.recorder
}

// CreateTagPaginationQuery mocks base method
func (m *MockTagModelFactory) CreateTagPaginationQuery() *models.TagPaginationQuery {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagPaginationQuery")
	ret0, _ := ret[0].(*models.TagPaginationQuery)
	return ret0
}

// CreateTagPaginationQuery indicates an expected call of CreateTagPaginationQuery
func (mr *MockTagModelFactoryMockRecorder) CreateTagPaginationQuery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagPaginationQuery", reflect.TypeOf((*MockTagModelFactory)(nil).CreateTagPaginationQuery))
}

// CreateTag mocks base method
func (m *MockTagModelFactory) CreateTag() *models.Tag {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTag")
	ret0, _ := ret[0].(*models.Tag)
	return ret0
}

// CreateTag indicates an expected call of CreateTag
func (mr *MockTagModelFactoryMockRecorder) CreateTag() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTag", reflect.TypeOf((*MockTagModelFactory)(nil).CreateTag))
}

// CreateTagCreate mocks base method
func (m *MockTagModelFactory) CreateTagCreate() *models.TagCreate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagCreate")
	ret0, _ := ret[0].(*models.TagCreate)
	return ret0
}

// CreateTagCreate indicates an expected call of CreateTagCreate
func (mr *MockTagModelFactoryMockRecorder) CreateTagCreate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagCreate", reflect.TypeOf((*MockTagModelFactory)(nil).CreateTagCreate))
}

// CreateTagUpdate mocks base method
func (m *MockTagModelFactory) CreateTagUpdate() *models.TagUpdate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagUpdate")
	ret0, _ := ret[0].(*models.TagUpdate)
	return ret0
}

// CreateTagUpdate indicates an expected call of CreateTagUpdate
func (mr *MockTagModelFactoryMockRecorder) CreateTagUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagUpdate", reflect.TypeOf((*MockTagModelFactory)(nil).CreateTagUpdate))
}
