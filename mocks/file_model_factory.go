// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/file_model_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFileModelFactory is a mock of FileModelFactory interface
type MockFileModelFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFileModelFactoryMockRecorder
}

// MockFileModelFactoryMockRecorder is the mock recorder for MockFileModelFactory
type MockFileModelFactoryMockRecorder struct {
	mock *MockFileModelFactory
}

// NewMockFileModelFactory creates a new mock instance
func NewMockFileModelFactory(ctrl *gomock.Controller) *MockFileModelFactory {
	mock := &MockFileModelFactory{ctrl: ctrl}
	mock.recorder = &MockFileModelFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileModelFactory) EXPECT() *MockFileModelFactoryMockRecorder {
	return m.recorder
}

// CreateFilePaginationQuery mocks base method
func (m *MockFileModelFactory) CreateFilePaginationQuery() *models.FilePaginationQuery {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFilePaginationQuery")
	ret0, _ := ret[0].(*models.FilePaginationQuery)
	return ret0
}

// CreateFilePaginationQuery indicates an expected call of CreateFilePaginationQuery
func (mr *MockFileModelFactoryMockRecorder) CreateFilePaginationQuery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFilePaginationQuery", reflect.TypeOf((*MockFileModelFactory)(nil).CreateFilePaginationQuery))
}

// CreateFile mocks base method
func (m *MockFileModelFactory) CreateFile() *models.File {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile")
	ret0, _ := ret[0].(*models.File)
	return ret0
}

// CreateFile indicates an expected call of CreateFile
func (mr *MockFileModelFactoryMockRecorder) CreateFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockFileModelFactory)(nil).CreateFile))
}

// CreateFileUpload mocks base method
func (m *MockFileModelFactory) CreateFileUpload() *models.FileUpload {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFileUpload")
	ret0, _ := ret[0].(*models.FileUpload)
	return ret0
}

// CreateFileUpload indicates an expected call of CreateFileUpload
func (mr *MockFileModelFactoryMockRecorder) CreateFileUpload() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileUpload", reflect.TypeOf((*MockFileModelFactory)(nil).CreateFileUpload))
}

// CreateFileUpdate mocks base method
func (m *MockFileModelFactory) CreateFileUpdate() *models.FileUpdate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFileUpdate")
	ret0, _ := ret[0].(*models.FileUpdate)
	return ret0
}

// CreateFileUpdate indicates an expected call of CreateFileUpdate
func (mr *MockFileModelFactoryMockRecorder) CreateFileUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileUpdate", reflect.TypeOf((*MockFileModelFactory)(nil).CreateFileUpdate))
}
