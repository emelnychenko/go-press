// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_aggregator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostAggregator is a mock of PostAggregator interface
type MockPostAggregator struct {
	ctrl     *gomock.Controller
	recorder *MockPostAggregatorMockRecorder
}

// MockPostAggregatorMockRecorder is the mock recorder for MockPostAggregator
type MockPostAggregatorMockRecorder struct {
	mock *MockPostAggregator
}

// NewMockPostAggregator creates a new mock instance
func NewMockPostAggregator(ctrl *gomock.Controller) *MockPostAggregator {
	mock := &MockPostAggregator{ctrl: ctrl}
	mock.recorder = &MockPostAggregatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostAggregator) EXPECT() *MockPostAggregatorMockRecorder {
	return m.recorder
}

// AggregateObject mocks base method
func (m *MockPostAggregator) AggregateObject(postEntity *entities.PostEntity) *models.Post {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregateObject", postEntity)
	ret0, _ := ret[0].(*models.Post)
	return ret0
}

// AggregateObject indicates an expected call of AggregateObject
func (mr *MockPostAggregatorMockRecorder) AggregateObject(postEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregateObject", reflect.TypeOf((*MockPostAggregator)(nil).AggregateObject), postEntity)
}

// AggregateCollection mocks base method
func (m *MockPostAggregator) AggregateCollection(postEntities []*entities.PostEntity) []*models.Post {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregateCollection", postEntities)
	ret0, _ := ret[0].([]*models.Post)
	return ret0
}

// AggregateCollection indicates an expected call of AggregateCollection
func (mr *MockPostAggregatorMockRecorder) AggregateCollection(postEntities interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregateCollection", reflect.TypeOf((*MockPostAggregator)(nil).AggregateCollection), postEntities)
}
