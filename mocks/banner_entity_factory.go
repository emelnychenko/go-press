// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/banner_entity_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBannerEntityFactory is a mock of BannerEntityFactory interface
type MockBannerEntityFactory struct {
	ctrl     *gomock.Controller
	recorder *MockBannerEntityFactoryMockRecorder
}

// MockBannerEntityFactoryMockRecorder is the mock recorder for MockBannerEntityFactory
type MockBannerEntityFactoryMockRecorder struct {
	mock *MockBannerEntityFactory
}

// NewMockBannerEntityFactory creates a new mock instance
func NewMockBannerEntityFactory(ctrl *gomock.Controller) *MockBannerEntityFactory {
	mock := &MockBannerEntityFactory{ctrl: ctrl}
	mock.recorder = &MockBannerEntityFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBannerEntityFactory) EXPECT() *MockBannerEntityFactoryMockRecorder {
	return m.recorder
}

// CreateBannerEntity mocks base method
func (m *MockBannerEntityFactory) CreateBannerEntity() *entities.BannerEntity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBannerEntity")
	ret0, _ := ret[0].(*entities.BannerEntity)
	return ret0
}

// CreateBannerEntity indicates an expected call of CreateBannerEntity
func (mr *MockBannerEntityFactoryMockRecorder) CreateBannerEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBannerEntity", reflect.TypeOf((*MockBannerEntityFactory)(nil).CreateBannerEntity))
}
