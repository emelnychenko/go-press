// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_video_controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	errors "github.com/emelnychenko/go-press/errors"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostVideoController is a mock of PostVideoController interface
type MockPostVideoController struct {
	ctrl     *gomock.Controller
	recorder *MockPostVideoControllerMockRecorder
}

// MockPostVideoControllerMockRecorder is the mock recorder for MockPostVideoController
type MockPostVideoControllerMockRecorder struct {
	mock *MockPostVideoController
}

// NewMockPostVideoController creates a new mock instance
func NewMockPostVideoController(ctrl *gomock.Controller) *MockPostVideoController {
	mock := &MockPostVideoController{ctrl: ctrl}
	mock.recorder = &MockPostVideoControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostVideoController) EXPECT() *MockPostVideoControllerMockRecorder {
	return m.recorder
}

// ChangePostVideo mocks base method
func (m *MockPostVideoController) ChangePostVideo(httpContext contracts.HttpContext) (interface{}, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangePostVideo", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// ChangePostVideo indicates an expected call of ChangePostVideo
func (mr *MockPostVideoControllerMockRecorder) ChangePostVideo(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangePostVideo", reflect.TypeOf((*MockPostVideoController)(nil).ChangePostVideo), httpContext)
}

// RemovePostVideo mocks base method
func (m *MockPostVideoController) RemovePostVideo(httpContext contracts.HttpContext) (interface{}, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemovePostVideo", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// RemovePostVideo indicates an expected call of RemovePostVideo
func (mr *MockPostVideoControllerMockRecorder) RemovePostVideo(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemovePostVideo", reflect.TypeOf((*MockPostVideoController)(nil).RemovePostVideo), httpContext)
}
