// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/aws_s3_uploader_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	session "github.com/aws/aws-sdk-go/aws/session"
	s3manageriface "github.com/aws/aws-sdk-go/service/s3/s3manager/s3manageriface"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAwsS3UploaderFactory is a mock of AwsS3UploaderFactory interface
type MockAwsS3UploaderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAwsS3UploaderFactoryMockRecorder
}

// MockAwsS3UploaderFactoryMockRecorder is the mock recorder for MockAwsS3UploaderFactory
type MockAwsS3UploaderFactoryMockRecorder struct {
	mock *MockAwsS3UploaderFactory
}

// NewMockAwsS3UploaderFactory creates a new mock instance
func NewMockAwsS3UploaderFactory(ctrl *gomock.Controller) *MockAwsS3UploaderFactory {
	mock := &MockAwsS3UploaderFactory{ctrl: ctrl}
	mock.recorder = &MockAwsS3UploaderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAwsS3UploaderFactory) EXPECT() *MockAwsS3UploaderFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockAwsS3UploaderFactory) Create(sess *session.Session) s3manageriface.UploaderAPI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", sess)
	ret0, _ := ret[0].(s3manageriface.UploaderAPI)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockAwsS3UploaderFactoryMockRecorder) Create(sess interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAwsS3UploaderFactory)(nil).Create), sess)
}
