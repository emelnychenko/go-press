// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/comment_entity_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCommentEntityFactory is a mock of CommentEntityFactory interface
type MockCommentEntityFactory struct {
	ctrl     *gomock.Controller
	recorder *MockCommentEntityFactoryMockRecorder
}

// MockCommentEntityFactoryMockRecorder is the mock recorder for MockCommentEntityFactory
type MockCommentEntityFactoryMockRecorder struct {
	mock *MockCommentEntityFactory
}

// NewMockCommentEntityFactory creates a new mock instance
func NewMockCommentEntityFactory(ctrl *gomock.Controller) *MockCommentEntityFactory {
	mock := &MockCommentEntityFactory{ctrl: ctrl}
	mock.recorder = &MockCommentEntityFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCommentEntityFactory) EXPECT() *MockCommentEntityFactoryMockRecorder {
	return m.recorder
}

// CreateCommentEntity mocks base method
func (m *MockCommentEntityFactory) CreateCommentEntity() *entities.CommentEntity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCommentEntity")
	ret0, _ := ret[0].(*entities.CommentEntity)
	return ret0
}

// CreateCommentEntity indicates an expected call of CreateCommentEntity
func (mr *MockCommentEntityFactoryMockRecorder) CreateCommentEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCommentEntity", reflect.TypeOf((*MockCommentEntityFactory)(nil).CreateCommentEntity))
}
