// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/model_validator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	errors "github.com/emelnychenko/go-press/errors"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockModelValidator is a mock of ModelValidator interface
type MockModelValidator struct {
	ctrl     *gomock.Controller
	recorder *MockModelValidatorMockRecorder
}

// MockModelValidatorMockRecorder is the mock recorder for MockModelValidator
type MockModelValidatorMockRecorder struct {
	mock *MockModelValidator
}

// NewMockModelValidator creates a new mock instance
func NewMockModelValidator(ctrl *gomock.Controller) *MockModelValidator {
	mock := &MockModelValidator{ctrl: ctrl}
	mock.recorder = &MockModelValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockModelValidator) EXPECT() *MockModelValidatorMockRecorder {
	return m.recorder
}

// ValidateModel mocks base method
func (m *MockModelValidator) ValidateModel(model interface{}) errors.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateModel", model)
	ret0, _ := ret[0].(errors.Error)
	return ret0
}

// ValidateModel indicates an expected call of ValidateModel
func (mr *MockModelValidatorMockRecorder) ValidateModel(model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateModel", reflect.TypeOf((*MockModelValidator)(nil).ValidateModel), model)
}
