// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/tag_event_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTagEventFactory is a mock of TagEventFactory interface
type MockTagEventFactory struct {
	ctrl     *gomock.Controller
	recorder *MockTagEventFactoryMockRecorder
}

// MockTagEventFactoryMockRecorder is the mock recorder for MockTagEventFactory
type MockTagEventFactoryMockRecorder struct {
	mock *MockTagEventFactory
}

// NewMockTagEventFactory creates a new mock instance
func NewMockTagEventFactory(ctrl *gomock.Controller) *MockTagEventFactory {
	mock := &MockTagEventFactory{ctrl: ctrl}
	mock.recorder = &MockTagEventFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTagEventFactory) EXPECT() *MockTagEventFactoryMockRecorder {
	return m.recorder
}

// CreateTagCreatedEvent mocks base method
func (m *MockTagEventFactory) CreateTagCreatedEvent(tagEntity *entities.TagEntity) contracts.TagEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagCreatedEvent", tagEntity)
	ret0, _ := ret[0].(contracts.TagEvent)
	return ret0
}

// CreateTagCreatedEvent indicates an expected call of CreateTagCreatedEvent
func (mr *MockTagEventFactoryMockRecorder) CreateTagCreatedEvent(tagEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagCreatedEvent", reflect.TypeOf((*MockTagEventFactory)(nil).CreateTagCreatedEvent), tagEntity)
}

// CreateTagUpdatedEvent mocks base method
func (m *MockTagEventFactory) CreateTagUpdatedEvent(tagEntity *entities.TagEntity) contracts.TagEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagUpdatedEvent", tagEntity)
	ret0, _ := ret[0].(contracts.TagEvent)
	return ret0
}

// CreateTagUpdatedEvent indicates an expected call of CreateTagUpdatedEvent
func (mr *MockTagEventFactoryMockRecorder) CreateTagUpdatedEvent(tagEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagUpdatedEvent", reflect.TypeOf((*MockTagEventFactory)(nil).CreateTagUpdatedEvent), tagEntity)
}

// CreateTagDeletedEvent mocks base method
func (m *MockTagEventFactory) CreateTagDeletedEvent(tagEntity *entities.TagEntity) contracts.TagEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTagDeletedEvent", tagEntity)
	ret0, _ := ret[0].(contracts.TagEvent)
	return ret0
}

// CreateTagDeletedEvent indicates an expected call of CreateTagDeletedEvent
func (mr *MockTagEventFactoryMockRecorder) CreateTagDeletedEvent(tagEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTagDeletedEvent", reflect.TypeOf((*MockTagEventFactory)(nil).CreateTagDeletedEvent), tagEntity)
}
