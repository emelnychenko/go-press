// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_model_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostModelFactory is a mock of PostModelFactory interface
type MockPostModelFactory struct {
	ctrl     *gomock.Controller
	recorder *MockPostModelFactoryMockRecorder
}

// MockPostModelFactoryMockRecorder is the mock recorder for MockPostModelFactory
type MockPostModelFactoryMockRecorder struct {
	mock *MockPostModelFactory
}

// NewMockPostModelFactory creates a new mock instance
func NewMockPostModelFactory(ctrl *gomock.Controller) *MockPostModelFactory {
	mock := &MockPostModelFactory{ctrl: ctrl}
	mock.recorder = &MockPostModelFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostModelFactory) EXPECT() *MockPostModelFactoryMockRecorder {
	return m.recorder
}

// CreatePostPaginationQuery mocks base method
func (m *MockPostModelFactory) CreatePostPaginationQuery() *models.PostPaginationQuery {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostPaginationQuery")
	ret0, _ := ret[0].(*models.PostPaginationQuery)
	return ret0
}

// CreatePostPaginationQuery indicates an expected call of CreatePostPaginationQuery
func (mr *MockPostModelFactoryMockRecorder) CreatePostPaginationQuery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostPaginationQuery", reflect.TypeOf((*MockPostModelFactory)(nil).CreatePostPaginationQuery))
}

// CreatePost mocks base method
func (m *MockPostModelFactory) CreatePost() *models.Post {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost")
	ret0, _ := ret[0].(*models.Post)
	return ret0
}

// CreatePost indicates an expected call of CreatePost
func (mr *MockPostModelFactoryMockRecorder) CreatePost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockPostModelFactory)(nil).CreatePost))
}

// CreatePostCreate mocks base method
func (m *MockPostModelFactory) CreatePostCreate() *models.PostCreate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostCreate")
	ret0, _ := ret[0].(*models.PostCreate)
	return ret0
}

// CreatePostCreate indicates an expected call of CreatePostCreate
func (mr *MockPostModelFactoryMockRecorder) CreatePostCreate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostCreate", reflect.TypeOf((*MockPostModelFactory)(nil).CreatePostCreate))
}

// CreatePostUpdate mocks base method
func (m *MockPostModelFactory) CreatePostUpdate() *models.PostUpdate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostUpdate")
	ret0, _ := ret[0].(*models.PostUpdate)
	return ret0
}

// CreatePostUpdate indicates an expected call of CreatePostUpdate
func (mr *MockPostModelFactoryMockRecorder) CreatePostUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostUpdate", reflect.TypeOf((*MockPostModelFactory)(nil).CreatePostUpdate))
}
