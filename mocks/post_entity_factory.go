// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_entity_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostEntityFactory is a mock of PostEntityFactory interface
type MockPostEntityFactory struct {
	ctrl     *gomock.Controller
	recorder *MockPostEntityFactoryMockRecorder
}

// MockPostEntityFactoryMockRecorder is the mock recorder for MockPostEntityFactory
type MockPostEntityFactoryMockRecorder struct {
	mock *MockPostEntityFactory
}

// NewMockPostEntityFactory creates a new mock instance
func NewMockPostEntityFactory(ctrl *gomock.Controller) *MockPostEntityFactory {
	mock := &MockPostEntityFactory{ctrl: ctrl}
	mock.recorder = &MockPostEntityFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostEntityFactory) EXPECT() *MockPostEntityFactoryMockRecorder {
	return m.recorder
}

// CreatePostEntity mocks base method
func (m *MockPostEntityFactory) CreatePostEntity() *entities.PostEntity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostEntity")
	ret0, _ := ret[0].(*entities.PostEntity)
	return ret0
}

// CreatePostEntity indicates an expected call of CreatePostEntity
func (mr *MockPostEntityFactoryMockRecorder) CreatePostEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostEntity", reflect.TypeOf((*MockPostEntityFactory)(nil).CreatePostEntity))
}
