// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_picture_controller.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	errors "github.com/emelnychenko/go-press/errors"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostPictureController is a mock of PostPictureController interface
type MockPostPictureController struct {
	ctrl     *gomock.Controller
	recorder *MockPostPictureControllerMockRecorder
}

// MockPostPictureControllerMockRecorder is the mock recorder for MockPostPictureController
type MockPostPictureControllerMockRecorder struct {
	mock *MockPostPictureController
}

// NewMockPostPictureController creates a new mock instance
func NewMockPostPictureController(ctrl *gomock.Controller) *MockPostPictureController {
	mock := &MockPostPictureController{ctrl: ctrl}
	mock.recorder = &MockPostPictureControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostPictureController) EXPECT() *MockPostPictureControllerMockRecorder {
	return m.recorder
}

// ChangePostPicture mocks base method
func (m *MockPostPictureController) ChangePostPicture(httpContext contracts.HttpContext) (interface{}, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangePostPicture", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// ChangePostPicture indicates an expected call of ChangePostPicture
func (mr *MockPostPictureControllerMockRecorder) ChangePostPicture(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangePostPicture", reflect.TypeOf((*MockPostPictureController)(nil).ChangePostPicture), httpContext)
}

// RemovePostPicture mocks base method
func (m *MockPostPictureController) RemovePostPicture(httpContext contracts.HttpContext) (interface{}, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemovePostPicture", httpContext)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// RemovePostPicture indicates an expected call of RemovePostPicture
func (mr *MockPostPictureControllerMockRecorder) RemovePostPicture(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemovePostPicture", reflect.TypeOf((*MockPostPictureController)(nil).RemovePostPicture), httpContext)
}
