// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/user_picture_api.go

// Package mocks is a generated GoMock package.
package mocks

import (
	common "github.com/emelnychenko/go-press/common"
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserPictureApi is a mock of UserPictureApi interface
type MockUserPictureApi struct {
	ctrl     *gomock.Controller
	recorder *MockUserPictureApiMockRecorder
}

// MockUserPictureApiMockRecorder is the mock recorder for MockUserPictureApi
type MockUserPictureApiMockRecorder struct {
	mock *MockUserPictureApi
}

// NewMockUserPictureApi creates a new mock instance
func NewMockUserPictureApi(ctrl *gomock.Controller) *MockUserPictureApi {
	mock := &MockUserPictureApi{ctrl: ctrl}
	mock.recorder = &MockUserPictureApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserPictureApi) EXPECT() *MockUserPictureApiMockRecorder {
	return m.recorder
}

// ChangeUserPicture mocks base method
func (m *MockUserPictureApi) ChangeUserPicture(userId *models.UserId, userPictureId *models.FileId) common.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeUserPicture", userId, userPictureId)
	ret0, _ := ret[0].(common.Error)
	return ret0
}

// ChangeUserPicture indicates an expected call of ChangeUserPicture
func (mr *MockUserPictureApiMockRecorder) ChangeUserPicture(userId, userPictureId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeUserPicture", reflect.TypeOf((*MockUserPictureApi)(nil).ChangeUserPicture), userId, userPictureId)
}

// RemoveUserPicture mocks base method
func (m *MockUserPictureApi) RemoveUserPicture(userId *models.UserId) common.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveUserPicture", userId)
	ret0, _ := ret[0].(common.Error)
	return ret0
}

// RemoveUserPicture indicates an expected call of RemoveUserPicture
func (mr *MockUserPictureApiMockRecorder) RemoveUserPicture(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUserPicture", reflect.TypeOf((*MockUserPictureApi)(nil).RemoveUserPicture), userId)
}
