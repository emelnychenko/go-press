// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/storage_provider.go

// Package mocks is a generated GoMock package.
package mocks

import (
	common "github.com/emelnychenko/go-press/common"
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockStorageProvider is a mock of StorageProvider interface
type MockStorageProvider struct {
	ctrl     *gomock.Controller
	recorder *MockStorageProviderMockRecorder
}

// MockStorageProviderMockRecorder is the mock recorder for MockStorageProvider
type MockStorageProviderMockRecorder struct {
	mock *MockStorageProvider
}

// NewMockStorageProvider creates a new mock instance
func NewMockStorageProvider(ctrl *gomock.Controller) *MockStorageProvider {
	mock := &MockStorageProvider{ctrl: ctrl}
	mock.recorder = &MockStorageProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorageProvider) EXPECT() *MockStorageProviderMockRecorder {
	return m.recorder
}

// UploadFile mocks base method
func (m *MockStorageProvider) UploadFile(fileEntity *entities.FileEntity, fileSource io.Reader) common.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", fileEntity, fileSource)
	ret0, _ := ret[0].(common.Error)
	return ret0
}

// UploadFile indicates an expected call of UploadFile
func (mr *MockStorageProviderMockRecorder) UploadFile(fileEntity, fileSource interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockStorageProvider)(nil).UploadFile), fileEntity, fileSource)
}

// DownloadFile mocks base method
func (m *MockStorageProvider) DownloadFile(fileEntity *entities.FileEntity, fileDestination io.Writer) common.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadFile", fileEntity, fileDestination)
	ret0, _ := ret[0].(common.Error)
	return ret0
}

// DownloadFile indicates an expected call of DownloadFile
func (mr *MockStorageProviderMockRecorder) DownloadFile(fileEntity, fileDestination interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadFile", reflect.TypeOf((*MockStorageProvider)(nil).DownloadFile), fileEntity, fileDestination)
}
