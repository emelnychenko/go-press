// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_tag_event_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostTagEventFactory is a mock of PostTagEventFactory interface
type MockPostTagEventFactory struct {
	ctrl     *gomock.Controller
	recorder *MockPostTagEventFactoryMockRecorder
}

// MockPostTagEventFactoryMockRecorder is the mock recorder for MockPostTagEventFactory
type MockPostTagEventFactoryMockRecorder struct {
	mock *MockPostTagEventFactory
}

// NewMockPostTagEventFactory creates a new mock instance
func NewMockPostTagEventFactory(ctrl *gomock.Controller) *MockPostTagEventFactory {
	mock := &MockPostTagEventFactory{ctrl: ctrl}
	mock.recorder = &MockPostTagEventFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostTagEventFactory) EXPECT() *MockPostTagEventFactoryMockRecorder {
	return m.recorder
}

// CreatePostTagAddedEvent mocks base method
func (m *MockPostTagEventFactory) CreatePostTagAddedEvent(arg0 *entities.PostEntity, arg1 *entities.TagEntity) contracts.PostTagEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostTagAddedEvent", arg0, arg1)
	ret0, _ := ret[0].(contracts.PostTagEvent)
	return ret0
}

// CreatePostTagAddedEvent indicates an expected call of CreatePostTagAddedEvent
func (mr *MockPostTagEventFactoryMockRecorder) CreatePostTagAddedEvent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostTagAddedEvent", reflect.TypeOf((*MockPostTagEventFactory)(nil).CreatePostTagAddedEvent), arg0, arg1)
}

// CreatePostTagRemovedEvent mocks base method
func (m *MockPostTagEventFactory) CreatePostTagRemovedEvent(arg0 *entities.PostEntity, arg1 *entities.TagEntity) contracts.PostTagEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePostTagRemovedEvent", arg0, arg1)
	ret0, _ := ret[0].(contracts.PostTagEvent)
	return ret0
}

// CreatePostTagRemovedEvent indicates an expected call of CreatePostTagRemovedEvent
func (mr *MockPostTagEventFactoryMockRecorder) CreatePostTagRemovedEvent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePostTagRemovedEvent", reflect.TypeOf((*MockPostTagEventFactory)(nil).CreatePostTagRemovedEvent), arg0, arg1)
}
