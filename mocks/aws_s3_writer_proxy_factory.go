// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/aws_s3_writer_proxy_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockAwsS3WriterProxyFactory is a mock of AwsS3WriterProxyFactory interface
type MockAwsS3WriterProxyFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAwsS3WriterProxyFactoryMockRecorder
}

// MockAwsS3WriterProxyFactoryMockRecorder is the mock recorder for MockAwsS3WriterProxyFactory
type MockAwsS3WriterProxyFactoryMockRecorder struct {
	mock *MockAwsS3WriterProxyFactory
}

// NewMockAwsS3WriterProxyFactory creates a new mock instance
func NewMockAwsS3WriterProxyFactory(ctrl *gomock.Controller) *MockAwsS3WriterProxyFactory {
	mock := &MockAwsS3WriterProxyFactory{ctrl: ctrl}
	mock.recorder = &MockAwsS3WriterProxyFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAwsS3WriterProxyFactory) EXPECT() *MockAwsS3WriterProxyFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockAwsS3WriterProxyFactory) Create(destination io.Writer) contracts.AwsS3WriterProxy {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", destination)
	ret0, _ := ret[0].(contracts.AwsS3WriterProxy)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockAwsS3WriterProxyFactoryMockRecorder) Create(destination interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAwsS3WriterProxyFactory)(nil).Create), destination)
}
