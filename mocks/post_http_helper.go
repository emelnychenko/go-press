// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_http_helper.go

// Package mocks is a generated GoMock package.
package mocks

import (
	common "github.com/emelnychenko/go-press/common"
	contracts "github.com/emelnychenko/go-press/contracts"
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostHttpHelper is a mock of PostHttpHelper interface
type MockPostHttpHelper struct {
	ctrl     *gomock.Controller
	recorder *MockPostHttpHelperMockRecorder
}

// MockPostHttpHelperMockRecorder is the mock recorder for MockPostHttpHelper
type MockPostHttpHelperMockRecorder struct {
	mock *MockPostHttpHelper
}

// NewMockPostHttpHelper creates a new mock instance
func NewMockPostHttpHelper(ctrl *gomock.Controller) *MockPostHttpHelper {
	mock := &MockPostHttpHelper{ctrl: ctrl}
	mock.recorder = &MockPostHttpHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostHttpHelper) EXPECT() *MockPostHttpHelperMockRecorder {
	return m.recorder
}

// ParsePostId mocks base method
func (m *MockPostHttpHelper) ParsePostId(httpContext contracts.HttpContext) (*models.PostId, common.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParsePostId", httpContext)
	ret0, _ := ret[0].(*models.PostId)
	ret1, _ := ret[1].(common.Error)
	return ret0, ret1
}

// ParsePostId indicates an expected call of ParsePostId
func (mr *MockPostHttpHelperMockRecorder) ParsePostId(httpContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParsePostId", reflect.TypeOf((*MockPostHttpHelper)(nil).ParsePostId), httpContext)
}
