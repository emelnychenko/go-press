// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/aws_s3_downloader_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	session "github.com/aws/aws-sdk-go/aws/session"
	s3manageriface "github.com/aws/aws-sdk-go/service/s3/s3manager/s3manageriface"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAwsS3DownloaderFactory is a mock of AwsS3DownloaderFactory interface
type MockAwsS3DownloaderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAwsS3DownloaderFactoryMockRecorder
}

// MockAwsS3DownloaderFactoryMockRecorder is the mock recorder for MockAwsS3DownloaderFactory
type MockAwsS3DownloaderFactoryMockRecorder struct {
	mock *MockAwsS3DownloaderFactory
}

// NewMockAwsS3DownloaderFactory creates a new mock instance
func NewMockAwsS3DownloaderFactory(ctrl *gomock.Controller) *MockAwsS3DownloaderFactory {
	mock := &MockAwsS3DownloaderFactory{ctrl: ctrl}
	mock.recorder = &MockAwsS3DownloaderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAwsS3DownloaderFactory) EXPECT() *MockAwsS3DownloaderFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockAwsS3DownloaderFactory) Create(sess *session.Session) s3manageriface.DownloaderAPI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", sess)
	ret0, _ := ret[0].(s3manageriface.DownloaderAPI)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockAwsS3DownloaderFactoryMockRecorder) Create(sess interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAwsS3DownloaderFactory)(nil).Create), sess)
}
