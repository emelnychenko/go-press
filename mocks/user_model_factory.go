// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/user_model_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/emelnychenko/go-press/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserModelFactory is a mock of UserModelFactory interface
type MockUserModelFactory struct {
	ctrl     *gomock.Controller
	recorder *MockUserModelFactoryMockRecorder
}

// MockUserModelFactoryMockRecorder is the mock recorder for MockUserModelFactory
type MockUserModelFactoryMockRecorder struct {
	mock *MockUserModelFactory
}

// NewMockUserModelFactory creates a new mock instance
func NewMockUserModelFactory(ctrl *gomock.Controller) *MockUserModelFactory {
	mock := &MockUserModelFactory{ctrl: ctrl}
	mock.recorder = &MockUserModelFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserModelFactory) EXPECT() *MockUserModelFactoryMockRecorder {
	return m.recorder
}

// CreateUserPaginationQuery mocks base method
func (m *MockUserModelFactory) CreateUserPaginationQuery() *models.UserPaginationQuery {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserPaginationQuery")
	ret0, _ := ret[0].(*models.UserPaginationQuery)
	return ret0
}

// CreateUserPaginationQuery indicates an expected call of CreateUserPaginationQuery
func (mr *MockUserModelFactoryMockRecorder) CreateUserPaginationQuery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserPaginationQuery", reflect.TypeOf((*MockUserModelFactory)(nil).CreateUserPaginationQuery))
}

// CreateUser mocks base method
func (m *MockUserModelFactory) CreateUser() *models.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser")
	ret0, _ := ret[0].(*models.User)
	return ret0
}

// CreateUser indicates an expected call of CreateUser
func (mr *MockUserModelFactoryMockRecorder) CreateUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserModelFactory)(nil).CreateUser))
}

// CreateUserCreate mocks base method
func (m *MockUserModelFactory) CreateUserCreate() *models.UserCreate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserCreate")
	ret0, _ := ret[0].(*models.UserCreate)
	return ret0
}

// CreateUserCreate indicates an expected call of CreateUserCreate
func (mr *MockUserModelFactoryMockRecorder) CreateUserCreate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserCreate", reflect.TypeOf((*MockUserModelFactory)(nil).CreateUserCreate))
}

// CreateUserUpdate mocks base method
func (m *MockUserModelFactory) CreateUserUpdate() *models.UserUpdate {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserUpdate")
	ret0, _ := ret[0].(*models.UserUpdate)
	return ret0
}

// CreateUserUpdate indicates an expected call of CreateUserUpdate
func (mr *MockUserModelFactoryMockRecorder) CreateUserUpdate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserUpdate", reflect.TypeOf((*MockUserModelFactory)(nil).CreateUserUpdate))
}

// CreateUserChangeIdentity mocks base method
func (m *MockUserModelFactory) CreateUserChangeIdentity() *models.UserChangeIdentity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserChangeIdentity")
	ret0, _ := ret[0].(*models.UserChangeIdentity)
	return ret0
}

// CreateUserChangeIdentity indicates an expected call of CreateUserChangeIdentity
func (mr *MockUserModelFactoryMockRecorder) CreateUserChangeIdentity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserChangeIdentity", reflect.TypeOf((*MockUserModelFactory)(nil).CreateUserChangeIdentity))
}

// CreateUserChangePassword mocks base method
func (m *MockUserModelFactory) CreateUserChangePassword() *models.UserChangePassword {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserChangePassword")
	ret0, _ := ret[0].(*models.UserChangePassword)
	return ret0
}

// CreateUserChangePassword indicates an expected call of CreateUserChangePassword
func (mr *MockUserModelFactoryMockRecorder) CreateUserChangePassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserChangePassword", reflect.TypeOf((*MockUserModelFactory)(nil).CreateUserChangePassword))
}
