// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/file_event_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	contracts "github.com/emelnychenko/go-press/contracts"
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFileEventFactory is a mock of FileEventFactory interface
type MockFileEventFactory struct {
	ctrl     *gomock.Controller
	recorder *MockFileEventFactoryMockRecorder
}

// MockFileEventFactoryMockRecorder is the mock recorder for MockFileEventFactory
type MockFileEventFactoryMockRecorder struct {
	mock *MockFileEventFactory
}

// NewMockFileEventFactory creates a new mock instance
func NewMockFileEventFactory(ctrl *gomock.Controller) *MockFileEventFactory {
	mock := &MockFileEventFactory{ctrl: ctrl}
	mock.recorder = &MockFileEventFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileEventFactory) EXPECT() *MockFileEventFactoryMockRecorder {
	return m.recorder
}

// CreateFileUploadedEvent mocks base method
func (m *MockFileEventFactory) CreateFileUploadedEvent(fileEntity *entities.FileEntity) contracts.FileEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFileUploadedEvent", fileEntity)
	ret0, _ := ret[0].(contracts.FileEvent)
	return ret0
}

// CreateFileUploadedEvent indicates an expected call of CreateFileUploadedEvent
func (mr *MockFileEventFactoryMockRecorder) CreateFileUploadedEvent(fileEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileUploadedEvent", reflect.TypeOf((*MockFileEventFactory)(nil).CreateFileUploadedEvent), fileEntity)
}

// CreateFileUpdatedEvent mocks base method
func (m *MockFileEventFactory) CreateFileUpdatedEvent(fileEntity *entities.FileEntity) contracts.FileEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFileUpdatedEvent", fileEntity)
	ret0, _ := ret[0].(contracts.FileEvent)
	return ret0
}

// CreateFileUpdatedEvent indicates an expected call of CreateFileUpdatedEvent
func (mr *MockFileEventFactoryMockRecorder) CreateFileUpdatedEvent(fileEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileUpdatedEvent", reflect.TypeOf((*MockFileEventFactory)(nil).CreateFileUpdatedEvent), fileEntity)
}

// CreateFileDeletedEvent mocks base method
func (m *MockFileEventFactory) CreateFileDeletedEvent(fileEntity *entities.FileEntity) contracts.FileEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFileDeletedEvent", fileEntity)
	ret0, _ := ret[0].(contracts.FileEvent)
	return ret0
}

// CreateFileDeletedEvent indicates an expected call of CreateFileDeletedEvent
func (mr *MockFileEventFactoryMockRecorder) CreateFileDeletedEvent(fileEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileDeletedEvent", reflect.TypeOf((*MockFileEventFactory)(nil).CreateFileDeletedEvent), fileEntity)
}
