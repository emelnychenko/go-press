// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/poll_entity_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPollEntityFactory is a mock of PollEntityFactory interface
type MockPollEntityFactory struct {
	ctrl     *gomock.Controller
	recorder *MockPollEntityFactoryMockRecorder
}

// MockPollEntityFactoryMockRecorder is the mock recorder for MockPollEntityFactory
type MockPollEntityFactoryMockRecorder struct {
	mock *MockPollEntityFactory
}

// NewMockPollEntityFactory creates a new mock instance
func NewMockPollEntityFactory(ctrl *gomock.Controller) *MockPollEntityFactory {
	mock := &MockPollEntityFactory{ctrl: ctrl}
	mock.recorder = &MockPollEntityFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPollEntityFactory) EXPECT() *MockPollEntityFactoryMockRecorder {
	return m.recorder
}

// CreatePollEntity mocks base method
func (m *MockPollEntityFactory) CreatePollEntity() *entities.PollEntity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePollEntity")
	ret0, _ := ret[0].(*entities.PollEntity)
	return ret0
}

// CreatePollEntity indicates an expected call of CreatePollEntity
func (mr *MockPollEntityFactoryMockRecorder) CreatePollEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePollEntity", reflect.TypeOf((*MockPollEntityFactory)(nil).CreatePollEntity))
}
