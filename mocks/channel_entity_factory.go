// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/channel_entity_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockChannelEntityFactory is a mock of ChannelEntityFactory interface
type MockChannelEntityFactory struct {
	ctrl     *gomock.Controller
	recorder *MockChannelEntityFactoryMockRecorder
}

// MockChannelEntityFactoryMockRecorder is the mock recorder for MockChannelEntityFactory
type MockChannelEntityFactoryMockRecorder struct {
	mock *MockChannelEntityFactory
}

// NewMockChannelEntityFactory creates a new mock instance
func NewMockChannelEntityFactory(ctrl *gomock.Controller) *MockChannelEntityFactory {
	mock := &MockChannelEntityFactory{ctrl: ctrl}
	mock.recorder = &MockChannelEntityFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChannelEntityFactory) EXPECT() *MockChannelEntityFactoryMockRecorder {
	return m.recorder
}

// CreateChannelEntity mocks base method
func (m *MockChannelEntityFactory) CreateChannelEntity() *entities.ChannelEntity {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateChannelEntity")
	ret0, _ := ret[0].(*entities.ChannelEntity)
	return ret0
}

// CreateChannelEntity indicates an expected call of CreateChannelEntity
func (mr *MockChannelEntityFactoryMockRecorder) CreateChannelEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateChannelEntity", reflect.TypeOf((*MockChannelEntityFactory)(nil).CreateChannelEntity))
}
