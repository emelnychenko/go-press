// Code generated by MockGen. DO NOT EDIT.
// Source: contracts/post_normalizer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "github.com/emelnychenko/go-press/entities"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPostNormalizer is a mock of PostNormalizer interface
type MockPostNormalizer struct {
	ctrl     *gomock.Controller
	recorder *MockPostNormalizerMockRecorder
}

// MockPostNormalizerMockRecorder is the mock recorder for MockPostNormalizer
type MockPostNormalizerMockRecorder struct {
	mock *MockPostNormalizer
}

// NewMockPostNormalizer creates a new mock instance
func NewMockPostNormalizer(ctrl *gomock.Controller) *MockPostNormalizer {
	mock := &MockPostNormalizer{ctrl: ctrl}
	mock.recorder = &MockPostNormalizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostNormalizer) EXPECT() *MockPostNormalizerMockRecorder {
	return m.recorder
}

// NormalizePostEntity mocks base method
func (m *MockPostNormalizer) NormalizePostEntity(postEntity *entities.PostEntity) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NormalizePostEntity", postEntity)
}

// NormalizePostEntity indicates an expected call of NormalizePostEntity
func (mr *MockPostNormalizerMockRecorder) NormalizePostEntity(postEntity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NormalizePostEntity", reflect.TypeOf((*MockPostNormalizer)(nil).NormalizePostEntity), postEntity)
}
