// Code generated by MockGen. DO NOT EDIT.
// Source: user_contract/user_aggregator.go

// Package user_mock is a generated GoMock package.
package user_mock

import (
	user_domain "../user_domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserAggregator is a mock of UserAggregator interface
type MockUserAggregator struct {
	ctrl     *gomock.Controller
	recorder *MockUserAggregatorMockRecorder
}

// MockUserAggregatorMockRecorder is the mock recorder for MockUserAggregator
type MockUserAggregatorMockRecorder struct {
	mock *MockUserAggregator
}

// NewMockUserAggregator creates a new mock instance
func NewMockUserAggregator(ctrl *gomock.Controller) *MockUserAggregator {
	mock := &MockUserAggregator{ctrl: ctrl}
	mock.recorder = &MockUserAggregatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserAggregator) EXPECT() *MockUserAggregatorMockRecorder {
	return m.recorder
}

// AggregateObject mocks base method
func (m *MockUserAggregator) AggregateObject(object *user_domain.UserEntity) *user_domain.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregateObject", object)
	ret0, _ := ret[0].(*user_domain.User)
	return ret0
}

// AggregateObject indicates an expected call of AggregateObject
func (mr *MockUserAggregatorMockRecorder) AggregateObject(object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregateObject", reflect.TypeOf((*MockUserAggregator)(nil).AggregateObject), object)
}

// AggregateCollection mocks base method
func (m *MockUserAggregator) AggregateCollection(collection []*user_domain.UserEntity) []*user_domain.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AggregateCollection", collection)
	ret0, _ := ret[0].([]*user_domain.User)
	return ret0
}

// AggregateCollection indicates an expected call of AggregateCollection
func (mr *MockUserAggregatorMockRecorder) AggregateCollection(collection interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AggregateCollection", reflect.TypeOf((*MockUserAggregator)(nil).AggregateCollection), collection)
}
