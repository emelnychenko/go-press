#!/usr/bin/env bash

USER="`whoami`"
HOME="`eval echo \"~$USER\"`"

MOCKS=(
    "$HOME/go/src/github.com/labstack/echo/context.go|echo_mocks/context.go"
    "$HOME/go/src/github.com/liuggio/events/events.go|events_mocks/events.go"
    "$HOME/go/src/github.com/aws/aws-sdk-go/service/s3/s3manager/s3manageriface/interface.go|aws_mocks/s3manager.go"
    "$HOME/go/src/github.com/aws/aws-sdk-go/service/s3/s3iface/interface.go|aws_mocks/s3.go"
    "common/subject.go|mocks/subject.go"
    "contracts/hasher.go|mocks/hasher.go"
    "contracts/router.go|mocks/router.go"
    "contracts/event_dispatcher.go|mocks/event_dispatcher.go"
    "contracts/content_type_validator.go|mocks/content_type_validator.go"
    "contracts/http_context.go|mocks/http_context.go"
    "contracts/aws_s3_parameters.go|mocks/aws_s3_parameters.go"
    "contracts/aws_s3_writer_proxy.go|mocks/aws_s3_writer_proxy.go"
    "contracts/aws_s3_writer_proxy_factory.go|mocks/aws_s3_writer_proxy_factory.go"
    "contracts/aws_s3_factory.go|mocks/aws_s3_factory.go"
    "contracts/aws_s3_uploader_factory.go|mocks/aws_s3_uploader_factory.go"
    "contracts/aws_s3_downloader_factory.go|mocks/aws_s3_downloader_factory.go"
    "contracts/aws_s3_writer_proxy_factory.go|mocks/aws_s3_writer_proxy_factory.go"
    "contracts/subject_resolver.go|mocks/subject_resolver.go"
    "contracts/user_entity_factory.go|mocks/user_entity_factory.go"
    "contracts/user_event_factory.go|mocks/user_event_factory.go"
    "contracts/user_picture_event_factory.go|mocks/user_picture_event_factory.go"
    "contracts/user_model_factory.go|mocks/user_model_factory.go"
    "contracts/user_repository.go|mocks/user_repository.go"
    "contracts/user_service.go|mocks/user_service.go"
    "contracts/user_picture_service.go|mocks/user_picture_service.go"
    "contracts/user_aggregator.go|mocks/user_aggregator.go"
    "contracts/user_api.go|mocks/user_api.go"
    "contracts/user_picture_api.go|mocks/user_picture_api.go"
    "contracts/user_http_helper.go|mocks/user_http_helper.go"
    "contracts/user_controller.go|mocks/user_controller.go"
    "contracts/user_picture_controller.go|mocks/user_picture_controller.go"
    "contracts/post_entity_factory.go|mocks/post_entity_factory.go"
    "contracts/post_event_factory.go|mocks/post_event_factory.go"
    "contracts/post_author_event_factory.go|mocks/post_author_event_factory.go"
    "contracts/post_picture_event_factory.go|mocks/post_picture_event_factory.go"
    "contracts/post_video_event_factory.go|mocks/post_video_event_factory.go"
    "contracts/post_model_factory.go|mocks/post_model_factory.go"
    "contracts/post_normalizer.go|mocks/post_normalizer.go"
    "contracts/post_repository.go|mocks/post_repository.go"
    "contracts/post_service.go|mocks/post_service.go"
    "contracts/post_picture_service.go|mocks/post_picture_service.go"
    "contracts/post_video_service.go|mocks/post_video_service.go"
    "contracts/post_author_service.go|mocks/post_author_service.go"
    "contracts/post_aggregator.go|mocks/post_aggregator.go"
    "contracts/post_api.go|mocks/post_api.go"
    "contracts/post_picture_api.go|mocks/post_picture_api.go"
    "contracts/post_video_api.go|mocks/post_video_api.go"
    "contracts/post_author_api.go|mocks/post_author_api.go"
    "contracts/post_http_helper.go|mocks/post_http_helper.go"
    "contracts/post_controller.go|mocks/post_controller.go"
    "contracts/post_author_controller.go|mocks/post_author_controller.go"
    "contracts/post_picture_controller.go|mocks/post_picture_controller.go"
    "contracts/post_video_controller.go|mocks/post_video_controller.go"
    "contracts/storage_provider.go|mocks/storage_provider.go"
    "contracts/file_path_strategy.go|mocks/file_path_strategy.go"
    "contracts/file_entity_factory.go|mocks/file_entity_factory.go"
    "contracts/file_event_factory.go|mocks/file_event_factory.go"
    "contracts/file_model_factory.go|mocks/file_model_factory.go"
    "contracts/file_repository.go|mocks/file_repository.go"
    "contracts/file_service.go|mocks/file_service.go"
    "contracts/file_aggregator.go|mocks/file_aggregator.go"
    "contracts/file_api.go|mocks/file_api.go"
    "contracts/file_http_helper.go|mocks/file_http_helper.go"
    "contracts/file_controller.go|mocks/file_controller.go"
)

for params in ${MOCKS[*]}
do
    IFS=$'|' read -r source destination <<< "$params"
    IFS=$'/' read -r package _ <<< "$destination"
    ~/go/bin/mockgen -source=${source} -destination=${destination} -package=${package}
done
